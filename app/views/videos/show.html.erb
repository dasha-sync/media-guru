<div class="container-video">
  <div class="border rounded show-video item">
    <div class="container mb-4">
      <br>
      <h4><%= @video.id %> <%= @video.video_name %></h4>
      <%= video_tag @video.video_url.to_s, controls: true, class: "video rounded" %>
      <div class="rating">
        <div class="stars">
          <% if @video.rating.nil? %>
            Рейтинг: нет
          <% else %>
            Рейтинг:&nbsp;
            <% (1..5).each do |i| %>
              <% if @video.rating >= i %>
                <span class="full-star span"></span>
              <% else %>
                <span class="span"></span>
              <% end %>
            <% end %>
          <% end %>
        </div>
        <div>
          <% if Mark.where(user: current_user, video: @video).present? %>
            <%= button_to "Удалить оценку", video_mark_path(@video.id, Mark.where(video: @video, user: current_user).first.id), method: :delete, class: "btn btn-outline-danger btn-rating" %>
          <% else %>
            <button class='btn btn-outline-secondary btn-rating' data-bs-toggle='modal' data-bs-target='#new-mark-modal'>Оценить видео</button>
          <% end %>
        </div>
      </div>
    </div>
  </div>
  <%= render partial: 'modal_mark', locals: { target_id: 'new-mark-modal', assotiation: :marks, video: @video} %>

  <div class="border rounded show-info-video item">
    <div class="container mb-4 ">
      <br>
      <div class='container-watched'>
        <div>
          <h6>Дата публикации</h6>
          <%= @video.created_at.strftime('%d %b %y %H:%M') %></p>
        </div>
        <div>
          <% if WatchedVideo.watched_video_exist(@video.id, current_user).present? %>
              <%= button_to 'Просмотрено', delete_from_watched_path(@video), method: :post, class: 'btn btn-danger btn-watched_videos table-btn' %>
          <% else %>
              <%= button_to 'Пометить просмотренным', add_to_watched_path(@video), method: :post, class: 'btn btn-outline-danger btn-watched_videos table-btn' %>
          <% end %>
        </div>
      </div>

      <%= render partial: 'dropdown' %>

      <%= render template: "video_languages/index", video: @video %>
      <%= render template: "video_tags/index", video: @video %>
      <%= render template: "video_speakers/index", video: @video %>
      <%= render template: "video_categories/index", video: @video %>
      <br><h6>Описание</h6>
      <label>
        <%= simple_format(@video.video_description) %>
      </label>
      <br>
    </div>
  </div>

</div>
<div class="border rounded show-recensions">
  <div class="container mb-4">
    <br>
    <h2>Комментарии</h2>
    <%= render 'reviews/form', review: @review %>

    <% @reviews.reverse.each do |review| %>
      <div class="card">
        <div class="card-body">
          <div>
            <strong>:</strong> <%= review.user.username %>
            <small><small>(<%= review.created_at.strftime('%d %b %y %H:%M') %>)</small></small>
            <br>
            <%= simple_format(review.text) %>
            <% if review.user == current_user %>
              <div class="container-review">
                  <%= link_to "Изменить", edit_video_review_path(review.video_id, review.id), class: "btn btn-outline-danger btn-sm" %>
                  <%= button_to "Удалить", video_review_path(review.video_id, review.id), method: :delete, class: "btn btn-danger btn-sm" %>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    <% end %>
  </div>
</div>

<script>
  document.getElementById('videoPlayer').addEventListener('ended', function() {
    // отправить запрос на сервер, чтобы пометить видео как просмотренное полностью
    fetch('/videos/' + videoId + '/mark_as_watched', {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
      }
    }).then(response => {
      if (response.ok) {
        console.log('Видео помечено как просмотренное полностью');
      } else {
        console.error('Ошибка при пометке видео как просмотренного');
      }
    }).catch(error => {
      console.error('Ошибка при отправке запроса:', error);
    });
  });
</script>
